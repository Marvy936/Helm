helm version -> shows installed version.

---- HELM HUB

helm search hub -> lists all charts on hub.
helm search hub nginx -> lists all charts using nginx on hub.
artifacthub.io -> hub website, you can search manualy for charts.

---- HELM REPO

helm repo list -> shows available repos.
helm repo add bitnami https://charts.bitnami.com/bitnami -> add bitnami to the available repos. (from artifacthub.io, button install, button ADD)
helm repo update -> update local cache after adding repo.
helm search repo -> shows available packages in repos.
--regexp "\vbitnami/nginx\v" -> regex searching in repos.
helm search repo nginx -> looks for nginx in repos.
--versions -> show all different versions.
helm repo remove {repo_name} - remove repo. 
helm show chart/readme/values/all/crds bitnami/nginx -> shows desired informations.

---- HELM RELEASE

helm pull bitnami/nginx -> pulls package.
helm install {name_of_release} bitnami/nginx -> release package with desired name.
--version 13.2.0 -> install specific version
--set replicaCount=2 -> set replicas to 2 or other config.
--values values.yaml -> read the config from file.
helm list -> show releases.
kubectl get all -> check release.
helm status {name_of_release} -> shows dns address.
helm uninstall {name_of_release} -> uninstall deployment/release.
helm get manifest {name_of_release} -? shows manifest of release.

---- HELM UPGRADE & ROLLBACK

helm upgrade {name_of_release} bitnami/nginx --version 13.1.3 -> upgrade release with new version.
--set replicaCount=2 -> set replicas to 2 or other config.
--values values.yaml -> read the config from file. 
helm rollback {name_of_release} 1 -> rollback on revision 1.
helm history {name_of_release} -> history of changes on release.

---- HELM CREATE & PACKAGE

helm create {name} -> creates empty templates for helm package.
helm package {name} -> create package tgz.
--version 0.3.0 -> package as new version, rewrite Chart.yaml version too.
helm template . -> shows manifest of creating package if you are in it's directory, I can check changes with that.
-s templates/service.yaml -> shows only service manifest.

---- MUSTACHE EXAMPLE

code/vim values.yaml

part: 2
service:
   port: 80

If we want to use the values from file:
Edit deployment.yaml

-image: bletvaska/rambo:{{ .Values.part }}

Edit service.yaml

-port: {{ .Values.service.port }}

{{ .Values.service.port }}
.Values because we want to extract values from the file
.service is because of service: in yaml.
.port because under service is key port: with value 80 and we want that value.

See built_in_objects for more.

---- HELM DEPENDENCIES

In to file Chart.yaml we can add dependencies.

apiVersion.: v2
name: wordpress-deps
description: A Helm chart for Kubernetes
type: application
version: 0.1.0
appVersion: "1.16.0"
dependencies:
- name: wordpress
  repository: "https://charts.bitnami.com/bitnami"
  version: "23.1.23"
- name: adminer
  repository: "https://cetic.github.io/helm-charts"
  version: "0.2.1"

helm dependency list . -> will show all chart dependencies.
helm dependency update . -> update dependencies on chart.
helm package {name} --dependency-update -> create package with solved dependencies

---- HELM SUBCHARTS

helm create umbrella-chart

I can create anothers charts in chart directory, that will be subcharts and will be realeased with main chart.

If I want to change values on those subcharts in values.yaml it works like that:

wordpress: #wordpress is name of the subchart of the directory.
  replicaCount: 3

adminer: #adminer is name of the subchart of the directory.
  replicaCount: 2

If we would like to change replicas in main chart with values.yaml it would looks like that:

replicaCount: 2

---- HELM PLUGINS

helm plugin install https://github.com/databus23/helm-diff -> install helm diff plugin.

helm diff upgrade -> can be used with upgrade and it shows the differences before upgrade.

helm diff revision {release_name} 1 2 -> shows the differnce between revisions.

helm plugin uninstall {name} - uninstall plugin.
